head(data1)
head(metadata)
head(data1)
dds <- DESeqDataSetFromMatrix(countData = data1,
colData= metadata,
design= ~ dexamethasone)
head(data1)
head(data1)
head(data1)
source("~/project_sample.R", echo=TRUE)
head(data1)
head(metadata)
head(metadata)
source("~/project_sample.R", echo=TRUE)
all(colnames(data1) == rownames(metadata))
all(colnames(data1) %in% rownames(metadata))
all(colnames(data1) == rownames(metadata))
head(metadata)
source("~/project_sample.R", echo=TRUE)
head(metadata)
all(colnames(data1) %in% rownames(metadata))
head(data1)
head(metadata)
all(colnames(data1) %in% rownames(metadata))
head(metadata)
head(data1)
head(metadata)
all(colnames(data1) %in% rownames(metadata))
all(colnames(data1) == rownames(metadata))
head(data1)
all(colnames(data1) %in% rownames(metadata))
source("~/project_sample.R", echo=TRUE)
head(data1)
head(data1)
head(metadata)
dds
dds
summary(res)
plotMA(res)
library(DESeq2)
library(pheatmap)
head(data1)
head(metadata)
all(colnames(data1) %in% rownames(metadata))
all(colnames(data1) == rownames(metadata))
dds <- DESeqDataSetFromMatrix(countData = data1,
colData= metadata,
design= ~ dexamethasone)
dds
dds
summary(res)
plotMA(res)
plotDispEsts(dds)
pheatmap(topc , cluster_rows = TRUE , cluster_cols = TRUE)
source("~/project_sample.R", echo=TRUE)
head(data1)
head(data1)
head(data1)
head(data1)
head(metadata)
source("~/project_sample.R", echo=TRUE)
source("~/project_sample.R", echo=TRUE)
library(shiny); runApp('shiny_dash.R')
micro <- read.csv('/Volumes/movies and others/Coding/shortmicrodata.csv')
head(micro)
# Generate heatmap using pheatmap
pheatmap(
heatmpdata,
color = colorRampPalette(c("red", "blue", "green"))(20),  # Define color palette
main = "heatmap",  # Title of the heatmap
scale = "row",  # Scale rows
cutree_rows = 17  # Cut the tree at 17 rows
)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
runApp('shiny_dash.R')
library(shiny); runApp('shiny_dash.R')
library(shiny); runApp('shiny_dash.R')
source("~/project_sample.R", echo=TRUE)
runApp('shiny_dash.R')
source("~/project_sample.R", echo=TRUE)
source("~/project_sample.R", echo=TRUE)
runApp('shiny_dash.R')
library(shiny); runApp('/Volumes/movies and others/Coding/R/shiny_dash_project.R')
install.packages(c("shiny", "shinydashboard"))
install.packages(c("shiny", "shinydashboard"))
install.packages(c("shiny", "shinydashboard"))
install.packages(c("shiny", "shinydashboard"))
library(shiny); runApp('/Volumes/movies and others/Coding/R/shiny_dash_project.R')
runApp('/Volumes/movies and others/Coding/R/shiny_dash_project.R')
runApp('/Volumes/movies and others/Coding/R/ll.R')
gc()
library(shiny); runApp('/Volumes/movies and others/Coding/R/shiny_dash_project.R')
runApp('shiny_dash.R')
source("~/project_sample.R", echo=TRUE)
source("~/project_sample.R", echo=TRUE)
runApp('shiny_dash.R')
runApp('shiny_dash.R')
data("diamonds")
install.packages("tidyverse")
library(ggplot2)
data("diamonds")
View(diamonds)
head(diamonds)
str(diamonds) #see structure
colnames(diamonds). #only see co names
colnames(diamonds)
library(tidyverse)
mutate(diamonds, carat_2 = carat *100)
as_tibble(diamonds)
install.packages("here")
install.packages("skimr")
install.packages("janitor")
library("here")
library("skimr")
library("janitor")
library("dplyr")
library("palmerpenguins")
skim_without_charts(penguins)
glimpse(penguins)
head(penguins)
penguins %>%
select(species)
penguins %>%
select(-species)
penguins %>%
rename(island_new = island)
rename_with(penguins, toupper())
rename_with(penguins, toupper)
rename_with(penguins, tolower)
clean_names(penguins)
library(tidyverse)
penguins %>%
arrange(bill_length_mm)
penguins %>%
arrange(-bill_length_mm) #sorting in descanding order
penguins2 <- penguins %>%
arrange(bill_length_mm) #sorting in ascending order
view(penguins2)
penguins2 <- penguins %>%
arrange(-bill_length_mm) #sorting in ascending order
view(penguins2)
penguins2 %>%
group_by(island) %>%
drop_na() %>%
summarise(bill_length_mm = mean(bill_length_mm))
penguins2 %>%
group_by(island) %>%
drop_na() %>%
summarise(max_bill_length = max(bill_length_mm))
penguins2 %>%
group_by(island , species) %>%
drop_na() %>%
summarise(max_bill = max(bill_length_mm) , min_bill = mean(bill_length_mm))
penguins2 %>% filter(island == "Dream")
id <- c(1:10)
name <- c("John Mendes", "Rob Stewart", "Rachel Abrahamson", "Christy Hickman", "Johnson Harper", "Candace Miller", "Carlson Landy", "Pansy Jordan", "Darius Berry", "Claudia Garcia")
job_title <- c("Professional", "Programmer", "Management", "Clerical", "Developer", "Programmer", "Management", "Clerical", "Developer", "Programmer")
employee <- data.frame(id , name , job_title)
print(employee)
separate(employee , name , into = c('First_name','Last_name'))
separate(employee , name , into = c('First_name','Last_name'), sep = ' ')
first_name <- c("John", "Rob", "Rachel", "Christy", "Johnson", "Candace", "Carlson", "Pansy", "Darius", "Claudia")
last_name <- c("Mendes", "Stewart", "Abrahamson", "Hickman", "Harper", "Miller", "Landy", "Jordan", "Berry", "Garcia")
job_title <- c("Professional", "Programmer", "Management", "Clerical", "Developer", "Programmer", "Management", "Clerical", "Developer", "Programmer")
employee <- data.frame(id, first_name, last_name, job_title)
print(employee)
unite(employee , 'name' ,first_name , last_name , sep = ' ' )
view(penguins)
view(penguins)
view(penguins2)
penguins2 %>%
mutate(body_mass_kg = body_mass_g /1000)
penguins2 %>%
mutate(body_mass_kg = body_mass_g /1000)
penguins %>%
mutate(body_mass_kg = body_mass_g /1000)
penguins2 %>%
mutate(body_mass_kg = body_mass_g /1000)
install.packages('Tmisc')
library('Tmisc')
data("quartet")
view(quartet)
quartet %>%
group_by(set) %>%
summarise(mean(x), sd(x), mean(y), sd(y), cor(x,y))
ggplot(quartet , aes(x,y) ) + geom_point() + geom_smooth(method = lm , se = FALSE ) + facet_wrap(~set)
install.packages("datasauRus")
library("datasauRus")
ggplot(datasaurus_dozen, aes(x=x,y=y, colour = dataset))+geom_point() + theme_void() + theme(legend.position = "none")+ facet_wrap(~dataset,ncol=3)
install.packages("SimDesign")
library("SimDesign")
bias(actual_temp , predic_temp)
actual_temp <- c(34.45,32.54,50.65,45,23,54,47.98)
predic_temp <- c(30.31,40.59 , 40 , 40.78 , 51 , 24 , 53.99 , 47.41)
bias(actual_temp , predic_temp)
predic_temp <- c(30.31,40.59,40,40.78,51,24,53.99, 47.41)
bias(actual_temp , predic_temp)
library(SimDesign)
bias(actual_temp , predic_temp)
bias(actual_temp , predic_temp)
actual_sales <- c(150, 203, 137, 247, 116, 287)
predicted_sales <- c(200, 300, 150, 250, 150, 300)
bias(actual_sales , predicted_sales)
bias(actual_temp , predic_temp)
actual_temp <- c(34.45, 32.54, 50.65, 45, 23, 54, 47.98)
predic_temp <- c(30.31, 40.59, 40.51, 40, 51, 24, 53.99)
bias(actual_temp , predic_temp)
data1 <- read_csv("/Volumes/movies and others/Coding/R/coursera/hostel bookings")
data1 <- read_csv("/Volumes/movies and others/Coding/R/coursera/hostel bookings.csv")
head(data1)
data1 %>%
group_by(lead_time)
data1 %>%
group_by(lead_time) %>%
summarise(mean(lead_time))
data1 %>%
group_by(lead_time)
data1 %>%
group_by(lead_time)
print(data1)
view(data1)
data1 %>%
mean(lead_time)
data1 %>%
select(lead_time)
data2 <- data1 %>%
select(lead_time)
head(data2)
summarise(data2)
?summarise()
data1 %>%
summarise(.by = lead_time , mean =mean(lead_time) )
data1 %>%
summarise(.by = lead_time , mean =avg(lead_time) )
data1 %>%
select(lead_time)
avg = mean(data1)
print(avg)
avg = mean(data1)
print(avg)
data1 %>%
select(lead_time) %>%
summarise(mean(lead_time))
library(tidyverse)
library(ggplot2)
library(palmerpenguins)
ggplot(data = penguins)+ geom_point(mapping = aes(x=flipped_lengtha_mm ,y = body_mass_g))
view(penguins)
ggplot(data = penguins)+ geom_point(mapping = aes(x=flipper_lengtha_mm ,y = body_mass_g))
ggplot(data = penguins)+ geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g))
ggplot(data = penguins)+
geom_point(mapping = aes(x=bill_length_mm ,y = bill_depth_mm))
(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, colours= species))
#change the aestheticsggplot
(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, colours= species))
#change the aestheticsggplot
(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, colour = species))
(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, shape = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species , size = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, alpha = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, alpha = species , color = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g),color = "purple")
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g , color = species),color = "purple")
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g),color = "purple")
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, shape = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species , size = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species , size = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, alpha = species , color = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g),color = "purple")
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g))
library(tidyverse)
library(ggplot2)
library(palmerpenguins)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g))
ggplot(data = penguins)+
geom_bar(mapping = aes(x=flipper_length_mm ,y = body_mass_g))
ggplot(data = penguins)+
geom_line(mapping = aes(x=flipper_length_mm ,y = body_mass_g))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g))+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g))+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g ),color = "red")+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g ),color = "darkblue")+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g ),color = "yellow")+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g ))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g , linetype = species))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g , linetype = species))+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g ),color = "yellow")+
geom_jitter(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species , shape = species))
ggplot(data = penguins)+
geom_smooth(mapping = aes(x=flipper_length_mm ,y = body_mass_g ),color = "yellow")+
geom_jitter(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species ))
ggplot(data = diamonds)+
geom_bar(mapping = aes(x=cut))
ggplot(data = diamonds)+
geom_bar(mapping = aes(x=cut , color = cut))
ggplot(data = diamonds)+
geom_bar(mapping = aes(x=cut , fill= cut)
ggplot(data = diamonds)+
ggplot(data = diamonds)+
geom_bar(mapping = aes(x=cut , fill = cut))
ggplot(data = diamonds)+
geom_bar(mapping = aes(x=cut , fill = clarity))
library(tidyverse)
library(ggplot2)
library(palmerpenguins)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
facet_wrap(~species)
ggplot(data = diamonds)+
goem_point(mapping=aes(x=color, fill=cut))
ggplot(data = diamonds)+
geom_point(mapping=aes(x=color, fill=cut))
ggplot(data = diamonds)+
geom_bar(mapping=aes(x=color, fill=cut))
ggplot(data = diamonds)+
geom_bar(mapping=aes(x=color, fill=cut))+
facet_wrap(~cut
ggplot(data = diamonds)+
ggplot(data = diamonds)+
geom_bar(mapping=aes(x=color, fill=cut))+
facet_wrap(~cut)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
facet_wrap(~species)
ggplot(data = diamonds)+
geom_bar(mapping=aes(x=color, fill=cut))+
facet_wrap(~cut)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
facet_grid(sex~species)
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~deposit_type)
ggplot(data = hotel bookings) +
head(data1)
ggplot(data = data1) +
geom_bar(mapping = aes(x = distribution_channel)) +
facet_wrap(~deposit_type)
ggplot(data = data1) +
geom_bar(mapping = aes(x = distribution_channel))
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
facet_grid(sex~species)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
facet_grid(~species)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
facet_grid(~sex)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
facet_grid(sex~species)
library(tidyverse)
library(ggplot2)
library(palmerpenguins)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length")
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length" , subtitle = "Sample of three species")
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length" , subtitle = "Sample of three species",
caption = "Data collected by Dr.Kristen Gorman")
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length" , subtitle = "Sample of three species",
caption = "Data collected by Dr.Kristen Gorman")+
annotate("text" , x=220 , y=3500 , label="The Gentoos are largest")
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length" , subtitle = "Sample of three species",
caption = "Data collected by Dr.Kristen Gorman")+
annotate("text" , x=220 , y=3500 , label="The Gentoos are largest", color = "purple",
fontface='bold', size=4.6)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length" , subtitle = "Sample of three species",
caption = "Data collected by Dr.Kristen Gorman")+
annotate("text" , x=220 , y=3500 , label="The Gentoos are largest", color = "purple",
fontface='bold', size=4.6, angle=28)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length" , subtitle = "Sample of three species",
caption = "Data collected by Dr.Kristen Gorman")+
annotate("text" , x=220 , y=3500 , label="The Gentoos are largest", color = "purple",
fontface='bold', size=4.6, angle=32)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length" , subtitle = "Sample of three species",
caption = "Data collected by Dr.Kristen Gorman")+
annotate("text" , x=220 , y=3500 , label="The Gentoos are largest", color = "purple",
fontface='bold', size=4.3, angle=32)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length" , subtitle = "Sample of three species",
caption = "Data collected by Dr.Kristen Gorman")+
annotate("text" , x=220 , y=3500 , label="The Gentoos are largest", color = "purple",
fontface='bold', size=4.2, angle=32)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))+
labs(title = "Palmer penguins : body mass VS flipper length" , subtitle = "Sample of three species",
caption = "Data collected by Dr.Kristen Gorman")+
annotate("text" , x=220 , y=3500 , label="The Gentoos are largest", color = "purple",
fontface='bold', size=4.1, angle=32)
ggsave(save_using_ggsave.png)
ggsave("save_using_ggsave.png")
ggsave("/Volumes/movies and others/Coding/R/coursera/save_using_ggsave.png")
install.packages("rmarkdown")
library(tidyverse)
library(palmerpenguins)
library(tidyverse)
library(palmerpenguins)
library(tidyverse)
library(palmerpenguins)
library(tidyverse)
library(palmerpenguins)
library(tidyverse)
library(palmerpenguins)
?filter()
#change the aesthetics
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g, color = species))
library(tidyverse)
library(ggplot2)
library(palmerpenguins)
ggplot(data = penguins)+
geom_point(mapping = aes(x=flipper_length_mm ,y = body_mass_g)) #aes.... aesthetic
install.packages("agricolae")
library(shiny); runApp('/Volumes/movies and others/Coding/R/gene_exp_project/project.R')
runApp('/Volumes/movies and others/Coding/R/gene_exp_project/project.R')
runApp('/Volumes/movies and others/Coding/R/gene_exp_project/shiny_dash_project.R')
runApp('/Volumes/movies and others/Coding/R/Gene Expression Analysis Project/Gene_expression_profile.R')
library(shiny); runApp('Gene_expression_profile.R')
runApp('/Volumes/movies and others/Coding/R/gene_exp_project/shiny_dash_project.R')
runApp('/Volumes/movies and others/Coding/R/gene_exp_project/project.R')
runApp('Gene_expression_profile.R')
library(shiny); runApp('Gene_expression_profile.R')
library(shiny)
library(DESeq2)
library(pheatmap)
library(VennDiagram)
library(plotly)
library(RColorBrewer)
runApp('Gene_expression_profile.R')
countData <- matrix(rnbinom(1000, mu=10, size=1), ncol=10)
colData <- data.frame(
condition = factor(rep(c("treated", "control"), each=5))
)
dds <- DESeqDataSetFromMatrix(countData, colData, design = ~ condition)
dds <- DESeq(dds)
install.packages(c("DESeq2", "shiny", "tidyverse", "BiocManager"))
install.packages(c("DESeq2", "shiny", "tidyverse", "BiocManager"))
install.packages(c("DESeq2", "shiny", "tidyverse", "BiocManager"))
install.packages(c("DESeq2", "shiny", "tidyverse", "BiocManager"))
install.packages(c("DESeq2", "shiny", "tidyverse", "BiocManager"))
library(shiny); runApp('Gene_expression_profile.R')
sessionInfo()
res <- results(dds)
runApp('Gene_expression_profile.R')
